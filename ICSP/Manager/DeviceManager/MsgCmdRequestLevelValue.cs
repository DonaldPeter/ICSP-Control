using System.Linq;

using ICSP.Constants;
using ICSP.Extensions;
using ICSP.Logging;

namespace ICSP.Manager.DeviceManager
{
  /// <summary>
  /// The Request Level Value message is generated by the master to request the level value of a level.
  /// </summary>
  [MsgCmd(DeviceManagerCmd.RequestLevelValue)]
  public class MsgCmdRequestLevelValue : ICSPMsg
  {
    public const int MsgCmd = DeviceManagerCmd.RequestLevelValue;

    private MsgCmdRequestLevelValue()
    {
    }

    public MsgCmdRequestLevelValue(byte[] buffer) : base(buffer)
    {
      if(Data.Length > 0)
      {
        Device = AmxDevice.FromDPS(Data.Range(0, 6));

        Level = Data.GetBigEndianInt16(6);
      }
    }

    public override ICSPMsg FromData(byte[] bytes)
    {
      return new MsgCmdRequestLevelValue(bytes);
    }

    public static ICSPMsg CreateRequest(AmxDevice source, AmxDevice device, ushort level)
    {
      var lRequest = new MsgCmdRequestLevelValue
      {
        Device = device,
        Level = level
      };

      var lData = device.GetBytesDPS().
        Concat(ArrayExtensions.Int16ToBigEndian(level)).
        ToArray();

      return lRequest.Serialize(device, source, MsgCmd, lData);
    }

    public AmxDevice Device { get; set; }

    public ushort Level { get; set; }

    protected override void WriteLogExtended()
    {
      Logger.LogDebug(false, "{0:l} Device: {1:l}", GetType().Name, Device);
      Logger.LogDebug(false, "{0:l} Level : {1}", GetType().Name, Level);
    }
  }
}
